// 希望这样的配置可以让人在 sublime 里面直接用 g++ 来进行 llvm 相关的开发。
//
// 这也是我在 windows 下的配置安装方式。
// 下载部分：
//      1 下载 llvm 的源代码（我下载的是 llvm-9.0.1.src.tar.xz）
//      2 下载安装 cmake 这个 cmake 需要是在 windows 上能够正常运行的版本（我下载的是 cmake-3.17.0-rc3-win64-x64.msi）
//          注意 cmake 安装的时候最好选择附带安装 gui，因为用 gui 操作起来会很方便
//      3 下载安装 TDM-GCC 注意，这里的 g++ 的版本一定需要是 >= 5.1 的，不然 cmake 编译 9.0.1 时会直接中断出错
//          之所以选 TDM-GCC 因为下载比较快，而且下载好后不需要联网安装，（我下载的是 tdm64-gcc-5.1.0-2.exe）
//          （网页下载巨慢，后来我改用迅雷后十几秒内就能下好）
// 安装部分：
//      4 将 llvm-9.0.1.src.tar.xz 解压到某个文件夹内，例如 D:/llvm/llvm-9.0.1.src
//      5 在对应的文件夹内创建一个空的文件夹，例如该创建的文件夹地址 D:/llvm/llvm-9.0.1.build
//          注意名字一定要对应得上，是 src 换成 build 创建的文件夹名
//      6 打开 cmake gui 然后指定好 source code 为源码地址，指定 build 的地址为刚才创建的文件夹地址
//          此时点击 generate 按钮静静等待一会儿就可以了
// 使用部分：
//      7 将 g++ 添加到环境变量
//      8 在 sublime 里面点击 Tools -> Build System -> New Build System 创建新的编译方式，打开一个文件窗口
//          将该文件下面的 json 内容完整的复制到新的编译方式的窗口里面保存，文件名字建议改成 g++，其实名字也随意，容易辨识即可。
//          注意下面的 json 文件里面两个引入库地址的修改
//      9 按下 Ctrl+Shift+B 选择编译方式即可
// 
// 这样至少下面的代码不会报错了，但是还是存在部分异常的情况，我可能还是不太了解是为什么。
// 可能是因为下面的这小块代码依赖于编译后的 llvm-config.h 的文件，所以 cmake 之后 build 环境有了 llvm-config.h 文件。
// #include "llvm/IR/Value.h"
// #include "llvm-c/Types.h"
// #include "llvm/ADT/ArrayRef.h"
// #include "llvm/ADT/FoldingSet.h"
// #include "llvm/ADT/Optional.h"
// #include "llvm/ADT/StringRef.h"
// #include "llvm/ADT/iterator_range.h"
// #include "llvm/Config/llvm-config.h"
// int main(int argc, char const *argv[]) {
//     return 0;
// }
// 
// 问题来了！！！
// 如果是下面这样的代码则会报错。错误信息中，发现是需要引入 inc 类的文件，但是发现实际上在 windows 上用 cmake 编译实际上是有问题的。
// 导致我在 bin 文件下面甚至都没有编译出 llvm-tblgen ，甚至仅仅只有一个 py 文件。所以可能是这个工具编译失败导致了后续 .td 文件没有被编译，
// #include "llvm\IR\Function.h"
// int main(int argc, char const *argv[]) {
//     return 0;
// }
// 错误信息如下：
// In file included from D:\llvm\llvm-9.0.1.src\include/llvm/IR/Argument.h:18:0,
//                  from D:\llvm\llvm-9.0.1.src\include/llvm\IR\Function.h:25,
//                  from C:\Users\Administrator\Desktop\test.cpp:1:
// D:\llvm\llvm-9.0.1.src\include/llvm/IR/Attributes.h:73:38: fatal error: llvm/IR/Attributes.inc: No such file or directory
// 
// 原因很有可能是在 windows 上我使用 cmake 编译 llvm 并没有完全编译成功，或者配置上面出现一些错误
// 导致 cmake 在某个步骤中就中断了编译的过程。
// 感觉 llvm 还是非常的抽象啊，光是安装这样一个步骤就能过滤掉一大半的人了，
// 这样很难吸引到像我这样的中低阶段刚刚开始对 llvm 有点兴趣的人吧。开发环境似乎没办法走向更加便利的话真的很容易打消人的信心呐。

{
    "cmd": ["g++", "${file}", "-o", "${file_path}/${file_base_name}.exe", "-std=c++11", 
                "-ID:\\llvm\\llvm-9.0.1.build\\include", "-ID:\\llvm\\llvm-9.0.1.src\\include", ],
    "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
    "working_dir": "${file_path}",
    "encoding":"cp936",
    "shell":true,
    "variants":
    [
        {
            "name": "Run BUILD_LLVM",
            "cmd": ["cmd", "/c", "g++", "${file}", "-o", "${file_path}/${file_base_name}.exe", 
                    "-std=c++11", "-ID:\\llvm\\llvm-9.0.1.build\\include", "-ID:\\llvm\\llvm-9.0.1.src\\include", 
                    "&&","${file_path}/${file_base_name}.exe"]
        },
    ]
}